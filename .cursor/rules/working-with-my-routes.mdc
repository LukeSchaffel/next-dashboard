---
description: 
globs: 
alwaysApply: true
---
# Your rule content

- This is Nextjs app router
- When nesting routes that require mutliple slugs, use this convetion /api/event/[id]/tickets/[ticketId], where the first slug will be named id for the resource, and following id will be more specific
- always use async parms in my api routs and awit them like this " export async function POST(
  request: NextRequest,
  { params }: { params: Promise<{ id: string }> }
  ) {
  try {
  const { id } = await params;
  const { workspaceId } = await getAuthSession(); "
- always use async params in components
- front end routes should follow the same naming convetions /dashboard/events/[id]
- Dynamic route params on frontend server components should be accessed async "export default async function LocationPage({
  params,
  }: {
  params: Promise<{ id: string }>;
  }) {
  const { id } = await params;
  const location = await getLocation(id);"
- Dynamic route params and query params in client rendered components should be accessed async with the React.use "export default function EventPage({
  params,
  }: {
  params: Promise<{ slug: string }>;
  }) {
  const { slug } = use(params);"
