// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  email     String      @unique
  name      String?
  createdAt DateTime    @default(now())
  Roles     UserRole[]
  clerkId   String      @unique
  Workspace Workspace[]
}

model Workspace {
  id           String         @id @default(cuid())
  name         String
  ownerId      String
  Owner        User           @relation(fields: [ownerId], references: [id])
  Locations    Location[]
  Roles        UserRole[]
  createdAt    DateTime       @default(now())
  Events       Event[]
  PurchaseLink PurchaseLink[]
}

model UserRole {
  id            String  @id @default(cuid())
  userId        String
  workspaceId   String
  Role          Role
  email         String
  name          String?
  CreatedEvents Event[]

  User      User      @relation(fields: [userId], references: [id])
  Workspace Workspace @relation(fields: [workspaceId], references: [id])

  @@unique([userId, workspaceId])
}

enum Role {
  ADMIN
  EMPLOYEE
}

model Location {
  id          String    @id @default(cuid())
  name        String
  address     String?
  description String?
  workspaceId String
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  Events      Event[]
}

model Event {
  id            String         @id @default(cuid())
  name          String
  description   String?
  startsAt      DateTime?
  endsAt        DateTime?
  locationId    String?
  Location      Location?      @relation(fields: [locationId], references: [id])
  userRoleId    String
  CreatedBy     UserRole       @relation(fields: [userRoleId], references: [id])
  workspaceId   String
  Workspace     Workspace      @relation(fields: [workspaceId], references: [id])
  Tickets       Ticket[]
  PurchaseLinks PurchaseLink[]
}

model Ticket {
  id        String       @id @default(cuid())
  name      String
  email     String
  price     Int // Price in cents
  status    TicketStatus @default(PENDING)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  eventId   String
  Event     Event        @relation(fields: [eventId], references: [id])

  @@index([email])
  @@index([status])
}

model PurchaseLink {
  id          String    @id @default(cuid())
  price       Int
  eventId     String
  Event       Event     @relation(fields: [eventId], references: [id])
  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  createdAt   DateTime  @default(now())
}

enum TicketStatus {
  PENDING
  CONFIRMED
  CANCELLED
  REFUNDED
}
