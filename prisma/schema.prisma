// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(cuid())
  email     String      @unique
  name      String?
  createdAt DateTime    @default(now())
  Roles     UserRole[]
  clerkId   String      @unique
  Workspace Workspace[]
}

model Workspace {
  id              String            @id @default(cuid())
  name            String
  ownerId         String
  Owner           User              @relation(fields: [ownerId], references: [id])
  Locations       Location[]
  Roles           UserRole[]
  createdAt       DateTime          @default(now())
  Events          Event[]
  TemplateLayout  TemplateLayout[]
  EventLayout     EventLayout[]
  EventSeries     EventSeries[]
  Ticket          Ticket[]
  TicketType      TicketType[]
  TemplateSection TemplateSection[]
  EventSection    EventSection[]
  TemplateRow     TemplateRow[]
  EventRow        EventRow[]
  TemplateSeat    TemplateSeat[]
  EventSeat       EventSeat[]
  TicketPurchase  TicketPurchase[]
  EventTags       EventTag[]
}

model UserRole {
  id            String  @id @default(cuid())
  userId        String
  workspaceId   String
  Role          Role
  email         String
  name          String?
  CreatedEvents Event[]

  User      User      @relation(fields: [userId], references: [id])
  Workspace Workspace @relation(fields: [workspaceId], references: [id])

  @@unique([userId, workspaceId])
}

enum Role {
  ADMIN
  EMPLOYEE
}

model Location {
  id             String          @id @default(cuid())
  name           String
  address        String?
  description    String?
  // Contact Information
  phoneNumber    String?
  email          String?
  website        String?
  facebookUrl    String?
  instagramUrl   String?
  twitterUrl     String?
  linkedinUrl    String?
  workspaceId    String
  Workspace      Workspace       @relation(fields: [workspaceId], references: [id])
  Events         Event[]
  templateLayout TemplateLayout? @relation("LocationTemplateLayout")
}

model EventSeries {
  id          String    @id @default(cuid())
  name        String
  description String?
  startDate   DateTime
  endDate     DateTime
  workspaceId String
  Workspace   Workspace @relation(fields: [workspaceId], references: [id])
  events      Event[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Event {
  id            String       @id @default(cuid())
  name          String
  description   String?
  startsAt      DateTime?
  endsAt        DateTime?
  locationId    String?
  Location      Location?    @relation(fields: [locationId], references: [id])
  userRoleId    String
  CreatedBy     UserRole     @relation(fields: [userRoleId], references: [id])
  workspaceId   String
  Workspace     Workspace    @relation(fields: [workspaceId], references: [id])
  eventSeriesId String?
  EventSeries   EventSeries? @relation(fields: [eventSeriesId], references: [id])
  Tickets       Ticket[]
  TicketTypes   TicketType[]
  eventLayout   EventLayout? @relation("EventCustomLayout")
  tags          EventTag[]
}

model Ticket {
  id           String         @id @default(cuid())
  name         String
  email        String
  price        Int // Price in cents
  status       TicketStatus   @default(PENDING)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  eventId      String
  Event        Event          @relation(fields: [eventId], references: [id])
  ticketTypeId String
  TicketType   TicketType     @relation(fields: [ticketTypeId], references: [id])
  seatId       String?        @unique
  seat         EventSeat?
  purchaseId   String
  purchase     TicketPurchase @relation(fields: [purchaseId], references: [id])
  workspaceId  String
  Workspace    Workspace      @relation(fields: [workspaceId], references: [id])

  @@index([email])
  @@index([status])
  @@index([workspaceId])
}

model TicketType {
  id              String         @id @default(cuid())
  name            String
  description     String?
  price           Int // Price in cents
  quantity        Int? // Optional quantity limit
  eventId         String
  Event           Event          @relation(fields: [eventId], references: [id])
  Tickets         Ticket[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  allowedSections EventSection[] @relation("TicketTypeSections")
  workspaceId     String
  Workspace       Workspace      @relation(fields: [workspaceId], references: [id])

  @@index([workspaceId])
}

enum TicketStatus {
  PENDING
  CONFIRMED
  CANCELLED
  REFUNDED
}

model TemplateLayout {
  id          String            @id @default(cuid())
  name        String
  description String?
  locationId  String?           @unique
  Location    Location?         @relation("LocationTemplateLayout", fields: [locationId], references: [id])
  workspaceId String
  Workspace   Workspace         @relation(fields: [workspaceId], references: [id])
  sections    TemplateSection[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  EventLayout EventLayout[]
}

model EventLayout {
  id          String          @id @default(cuid())
  name        String
  description String?
  eventId     String          @unique
  Event       Event           @relation("EventCustomLayout", fields: [eventId], references: [id])
  templateId  String?
  template    TemplateLayout? @relation(fields: [templateId], references: [id])
  workspaceId String
  Workspace   Workspace       @relation(fields: [workspaceId], references: [id])
  sections    EventSection[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model TemplateSection {
  id               String         @id @default(cuid())
  name             String
  description      String?
  templateLayoutId String
  TemplateLayout   TemplateLayout @relation(fields: [templateLayoutId], references: [id])
  rows             TemplateRow[]
  priceMultiplier  Float          @default(1.0)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  workspaceId      String
  Workspace        Workspace      @relation(fields: [workspaceId], references: [id])

  @@index([workspaceId])
}

model EventSection {
  id                 String       @id @default(cuid())
  name               String
  description        String?
  eventLayoutId      String
  EventLayout        EventLayout  @relation(fields: [eventLayoutId], references: [id])
  rows               EventRow[]
  priceMultiplier    Float        @default(1.0)
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
  allowedTicketTypes TicketType[] @relation("TicketTypeSections")
  workspaceId        String
  Workspace          Workspace    @relation(fields: [workspaceId], references: [id])

  @@index([workspaceId])
}

model TemplateRow {
  id          String          @id @default(cuid())
  name        String
  sectionId   String
  Section     TemplateSection @relation(fields: [sectionId], references: [id])
  seats       TemplateSeat[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  workspaceId String
  Workspace   Workspace       @relation(fields: [workspaceId], references: [id])

  @@unique([sectionId, name])
  @@index([workspaceId])
}

model EventRow {
  id          String       @id @default(cuid())
  name        String
  sectionId   String
  Section     EventSection @relation(fields: [sectionId], references: [id])
  seats       EventSeat[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  workspaceId String
  Workspace   Workspace    @relation(fields: [workspaceId], references: [id])

  @@unique([sectionId, name])
  @@index([workspaceId])
}

model TemplateSeat {
  id          String      @id @default(cuid())
  number      String
  status      SeatStatus  @default(AVAILABLE)
  rowId       String
  Row         TemplateRow @relation(fields: [rowId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  workspaceId String
  Workspace   Workspace   @relation(fields: [workspaceId], references: [id])

  @@unique([rowId, number])
  @@index([workspaceId])
}

model EventSeat {
  id          String     @id @default(cuid())
  number      String
  status      SeatStatus @default(AVAILABLE)
  rowId       String
  Row         EventRow   @relation(fields: [rowId], references: [id])
  ticketId    String?    @unique
  ticket      Ticket?    @relation(fields: [ticketId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  workspaceId String
  Workspace   Workspace  @relation(fields: [workspaceId], references: [id])

  @@unique([rowId, number])
  @@index([workspaceId])
}

enum SeatStatus {
  AVAILABLE
  RESERVED
  OCCUPIED
  DISABLED
}

model TicketPurchase {
  id            String         @id @default(cuid())
  totalAmount   Int // Total amount in cents
  status        PurchaseStatus @default(PENDING)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  tickets       Ticket[]
  customerEmail String
  customerName  String?
  workspaceId   String
  Workspace     Workspace      @relation(fields: [workspaceId], references: [id])

  @@index([customerEmail])
  @@index([status])
  @@index([workspaceId])
}

enum PurchaseStatus {
  PENDING
  COMPLETED
  CANCELLED
  REFUNDED
}

model Tag {
  id          String     @id @default(cuid())
  name        String     @unique
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  eventTags   EventTag[]
}

model EventTag {
  id          String   @id @default(cuid())
  tagId       String
  eventId     String
  workspaceId String
  name        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  Tag       Tag       @relation(fields: [tagId], references: [id])
  Event     Event     @relation(fields: [eventId], references: [id])
  Workspace Workspace @relation(fields: [workspaceId], references: [id])

  @@unique([tagId, eventId])
  @@index([workspaceId])
}
